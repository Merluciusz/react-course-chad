{"ast":null,"code":"var _jsxFileName = \"/home/emil/GitProjects/ChadDarbyUdemy/lesson01/react-todo-demo/src/components/NewTodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewTodoForm(props) {\n  _s();\n  const [description, setDescription] = useState(\"\");\n  const [assigned, setAssigned] = useState(\"\");\n\n  // const descriptionChange = (event) => {\n  //   setDescription(event.target.value);\n  //   console.log(\"description \", description);\n  // };\n\n  // const assignedChange = (event) => {\n  //   setAssigned(event.target.value);\n  //   console.log(\"assigned \", assigned);\n  // };\n\n  const submitTodo = () => {\n    if (description !== \"\" && assigned !== \"\") {\n      props.addTodo(description, assigned);\n      setDescription(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Assigned\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          required: true,\n          onChange: event => {\n            setAssigned(event.target.value);\n            console.log(\"assigned \", assigned);\n          },\n          value: assigned\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          rows: 3,\n          required: true,\n          onChange: event => {\n            setDescription(event.target.value);\n            console.log(\"description \", description);\n          },\n          value: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary mt-3\",\n        onClick: submitTodo,\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(NewTodoForm, \"mtZJquSIld5e/naWeyuDN8WHT9g=\");\n_c = NewTodoForm;\nexport default NewTodoForm;\nvar _c;\n$RefreshReg$(_c, \"NewTodoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NewTodoForm","props","_s","description","setDescription","assigned","setAssigned","submitTodo","addTodo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","required","onChange","event","target","value","console","log","rows","onClick","_c","$RefreshReg$"],"sources":["/home/emil/GitProjects/ChadDarbyUdemy/lesson01/react-todo-demo/src/components/NewTodoForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction NewTodoForm(props) {\n  const [description, setDescription] = useState(\"\");\n  const [assigned, setAssigned] = useState(\"\");\n\n  // const descriptionChange = (event) => {\n  //   setDescription(event.target.value);\n  //   console.log(\"description \", description);\n  // };\n\n  // const assignedChange = (event) => {\n  //   setAssigned(event.target.value);\n  //   console.log(\"assigned \", assigned);\n  // };\n\n  const submitTodo = () => {\n    if (description !== \"\" && assigned !== \"\") {\n      props.addTodo(description, assigned);\n      setDescription(\"\");\n    }\n  };\n\n  return (\n    <div className=\"mt-5\">\n      <form>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Assigned</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            required\n            onChange={(event) => {\n              setAssigned(event.target.value);\n              console.log(\"assigned \", assigned);\n            }}\n            value={assigned}\n          ></input>\n        </div>\n\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Description</label>\n          <textarea\n            className=\"form-control\"\n            rows={3}\n            required\n            onChange={(event) => {\n              setDescription(event.target.value);\n              console.log(\"description \", description);\n            }}\n            value={description}\n          ></textarea>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-primary mt-3\"\n          onClick={submitTodo}\n        >\n          Add Todo\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default NewTodoForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIJ,WAAW,KAAK,EAAE,IAAIE,QAAQ,KAAK,EAAE,EAAE;MACzCJ,KAAK,CAACO,OAAO,CAACL,WAAW,EAAEE,QAAQ,CAAC;MACpCD,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,oBACEL,OAAA;IAAKU,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBX,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAKU,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBX,OAAA;UAAOU,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAC9Cf,OAAA;UACEgB,IAAI,EAAC,MAAM;UACXN,SAAS,EAAC,cAAc;UACxBO,QAAQ;UACRC,QAAQ,EAAGC,KAAK,IAAK;YACnBZ,WAAW,CAACY,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;YAC/BC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEjB,QAAQ,CAAC;UACpC,CAAE;UACFe,KAAK,EAAEf;QAAS;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACL,eAENf,OAAA;QAAKU,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBX,OAAA;UAAOU,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACjDf,OAAA;UACEU,SAAS,EAAC,cAAc;UACxBc,IAAI,EAAE,CAAE;UACRP,QAAQ;UACRC,QAAQ,EAAGC,KAAK,IAAK;YACnBd,cAAc,CAACc,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;YAClCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEnB,WAAW,CAAC;UAC1C,CAAE;UACFiB,KAAK,EAAEjB;QAAY;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACR,eAENf,OAAA;QACEgB,IAAI,EAAC,QAAQ;QACbN,SAAS,EAAC,sBAAsB;QAChCe,OAAO,EAAEjB,UAAW;QAAAG,QAAA,EACrB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAACZ,EAAA,CA9DQF,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAgEpB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}